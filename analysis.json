{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "User data related settings panel for Advanced REST client\n\nDatabase export is handled by sending `export-user-data` custom event that\nis handled by the `<arc-data-export>` (or any other compatible) element.\n\n### Example\n\n```html\n<arc-data-export app-version=\"12.0.0\" electron-cookies></arc-data-export>\n<google-drive-upload></google-drive-upload>\n<file-save></file-save>\n... ARC models imports\n<arc-data-settings-panel></arc-data-settings-panel>\n```\n\n### Styling\n`<arc-data-settings-panel>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--arc-data-settings-panel` | Mixin applied to the element | `{}`\n`--arc-settings-panel-header` | Mixin applied to settings panel header | `{}`\n`--arc-settings-panel-header-color` | Color of the settings panel header | `--accent-color`\n`--arc-settings-panel-icon-color` | Settings panel icon color | `rgba(0, 0, 0, 0.34)`",
      "summary": "",
      "path": "arc-data-settings-panel.html",
      "properties": [
        {
          "name": "manual",
          "type": "boolean | null | undefined",
          "description": "When set the element will not request current settings state and\nwill wait until it's properties are set.",
          "privacy": "public",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 99,
              "column": 8
            },
            "end": {
              "line": 99,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "loading",
          "type": "boolean | null | undefined",
          "description": "When set the settings are baing loaded.",
          "privacy": "public",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 103,
              "column": 8
            },
            "end": {
              "line": 103,
              "column": 62
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "page",
          "type": "number | null | undefined",
          "description": "Currently displayed page of the settings editor",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 8
            },
            "end": {
              "line": 196,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "__settingsRestored",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 108,
              "column": 8
            },
            "end": {
              "line": 108,
              "column": 57
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "deletingDatabases",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 197,
              "column": 34
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "historyEnabled",
          "type": "boolean | null | undefined",
          "description": "History store enabled / disabled",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 8
            },
            "end": {
              "line": 205,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_historyChanged\"",
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 125,
              "column": 4
            },
            "end": {
              "line": 128,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "loadSettings",
          "description": "Dispatches `settings-read` custom event to settings provider to read\napplication settings and sets received values on the component.",
          "privacy": "public",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 135,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise",
            "desc": "Promise resolved when operartion ends."
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "_readSettings",
          "description": "Reads settings from the settings provider",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 161,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "_processValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "values"
            }
          ]
        },
        {
          "name": "_setSettings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 4
            },
            "end": {
              "line": 284,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "values"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updateSetting",
          "description": "Dispatches `settings-changed` to settings provider with new value.\nThe event is dispatched with 300 ms debouncer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 194,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "key",
              "type": "String",
              "description": "Setting key"
            },
            {
              "name": "value",
              "type": "any",
              "description": "Value to store. Values are serialized"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "_updateSetting",
          "description": "Dispatches `settings-changed` event to store the setting value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 215,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "type": "String",
              "description": "Property name"
            },
            {
              "name": "value",
              "type": "any",
              "description": "A value to store."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "_boolValue",
          "description": "Returns a boolean value for the `value`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 221,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "_numValue",
          "description": "Returns a numeric value for the `value`",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 241,
              "column": 4
            },
            "end": {
              "line": 247,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val",
              "type": "any",
              "description": "Current value"
            }
          ],
          "return": {
            "type": "Number",
            "desc": "Translated value"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "_showPage",
          "description": "Shows internal sub-page",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 253,
              "column": 4
            },
            "end": {
              "line": 270,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "back",
          "description": "Restores the main page of the editor.",
          "privacy": "public",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 274,
              "column": 4
            },
            "end": {
              "line": 276,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "_toggleOption",
          "description": "To be used when a list item has a toggle button.\nWhen clicking on the list option this function should be called to\ntoggle the button.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 283,
              "column": 4
            },
            "end": {
              "line": 286,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "_cancelEvent",
          "description": "Cancels the event and it's propagation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 291,
              "column": 4
            },
            "end": {
              "line": 294,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "_openLink",
          "description": "Opens a URL in new window.\nIf the application handle `open-external-url` then it does nothing.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 301,
              "column": 4
            },
            "end": {
              "line": 315,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "__settingsUpdated",
          "description": "Handler for `settings-changed` event.\nCalls `_settingsChanged` function if implementing element has this method.",
          "privacy": "private",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 321,
              "column": 4
            },
            "end": {
              "line": 329,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "_deleteAllClick",
          "description": "Handler for delete all click",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onClearDialogResult",
          "description": "Called when delete datastore dialog is closed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "detail"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "deleteDatabases",
          "description": "Handler to be called when the clear data dialog has been closed.\nIt it's not canceled then it will clear (destroy) selected datastores.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_exportAllFile",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 269,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_historyChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_settingsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 298,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "key"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 188,
          "column": 2
        },
        "end": {
          "line": 299,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.ArcDataSettingsPanel",
      "attributes": [
        {
          "name": "manual",
          "description": "When set the element will not request current settings state and\nwill wait until it's properties are set.",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 99,
              "column": 8
            },
            "end": {
              "line": 99,
              "column": 23
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "loading",
          "description": "When set the settings are baing loaded.",
          "sourceRange": {
            "file": "../arc-settings-panel-mixin/arc-settings-panel-mixin.html",
            "start": {
              "line": 103,
              "column": 8
            },
            "end": {
              "line": 103,
              "column": 62
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.ArcSettingsPanelMixin"
        },
        {
          "name": "page",
          "description": "Currently displayed page of the settings editor",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 8
            },
            "end": {
              "line": 196,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "deleting-databases",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 197,
              "column": 34
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "history-enabled",
          "description": "History store enabled / disabled",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 8
            },
            "end": {
              "line": 205,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "history-enabled-changed",
          "description": "Fired when the `historyEnabled` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "arc-data-settings-panel",
      "mixins": [
        "ArcComponents.ArcSettingsPanelMixin"
      ]
    }
  ]
}
